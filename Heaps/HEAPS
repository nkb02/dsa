1.  k-th smallest number in the array 

// max heap

int maxh(int a[], int n, int k){
    priority_queue<int> maxHeap;
    for (int i = 0; i < n; ++i)
    {
        maxHeap.push(a[i]);
        if(maxHeap.size() >k)
            maxHeap.pop();
    }
    return maxHeap.top();
}

2.  k-th largest number in the array 

// min heap

int minh(int a[], int n ,int k){
    priority_queue<int,vector<int>, greater<int>> minHeap;
    for (int i = 0; i < n; ++i)
    {
        minHeap.push(a[i]);
        if(minHeap.size() >k)
            minHeap.pop();
    }
    return minHeap.top();
}


3. sort a k-sorted array

	arr[] : {6, 5, 3, 2, 8, 10, 9}
	k = 3

// min heap

void minh(){
    priority_queue<int,vector<int>, greater<int>> minHeap;
        vector<int> sortedArray;
        for (int i = 0; i < n; ++i)
        {
            minHeap.push(a[i]);
            if(minHeap.size() >k)
                {
                    sortedArray.push_back(minHeap.top());
                    minHeap.pop();
                }
        }
        while(minHeap.size()!= 0){
            sortedArray.push_back(minHeap.top());
            minHeap.pop();
        }
              
        for(auto x: sortedArray)
        {
            cout<<x<<" ";
        }
}


4. k- closest numbers

	k = 3
	x = 7
	TO FIND K (=3) NUM CLOSEST TO X (=7)

	






















